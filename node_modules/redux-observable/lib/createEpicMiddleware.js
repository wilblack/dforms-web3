'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createEpicMiddleware = createEpicMiddleware;

var _Subject = require('rxjs/Subject');

var _BehaviorSubject = require('rxjs/BehaviorSubject');

var _from = require('rxjs/observable/from');

var _switchMap = require('rxjs/operator/switchMap');

var _ActionsObservable = require('./ActionsObservable');

var _EPIC_END = require('./EPIC_END');

var defaultAdapter = {
  input: function input(action$) {
    return action$;
  },
  output: function output(action$) {
    return action$;
  }
};

var defaultOptions = {
  adapter: defaultAdapter
};

function createEpicMiddleware(epic) {
  var _ref = arguments.length <= 1 || arguments[1] === undefined ? defaultOptions : arguments[1];

  var _ref$adapter = _ref.adapter;
  var adapter = _ref$adapter === undefined ? defaultAdapter : _ref$adapter;

  var input$ = new _Subject.Subject();
  var action$ = adapter.input(new _ActionsObservable.ActionsObservable(input$));
  var epic$ = new _BehaviorSubject.BehaviorSubject(epic);
  var store = void 0;

  var epicMiddleware = function epicMiddleware(_store) {
    store = _store;

    return function (next) {
      if (typeof epic === 'function') {
        _switchMap.switchMap.call(epic$, function (epic) {
          return adapter.output(epic(action$, store));
        }).subscribe(store.dispatch);
      }

      return function (action) {
        if (typeof action === 'function') {
          if (typeof console !== 'undefined' && typeof console.warn !== 'undefined') {
            console.warn('DEPRECATION: Using thunkservables with redux-observable is now deprecated in favor of the new "Epics" feature. See http://redux-observable.js.org/docs/FAQ.html#why-were-thunkservables-deprecated');
          }

          var out$ = (0, _from.from)(action(action$, store));
          return out$.subscribe(store.dispatch);
        } else {
          var result = next(action);
          input$.next(action);
          return result;
        }
      };
    };
  };

  epicMiddleware.replaceEpic = function (epic) {
    store.dispatch({ type: _EPIC_END.EPIC_END });
    epic$.next(epic);
  };

  return epicMiddleware;
}